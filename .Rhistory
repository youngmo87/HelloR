tw = gsub("[[:cntrl:]]", "", tw)
tw = gsub("http[s]?://[[:alnum:].\\/]+", "", tw)
tw = gsub("&[[:alnum:]]+;", "", tw)
tw = gsub("@[[:alnum:]]+[:]?", "", tw)
tw = gsub("[ㄱ-ㅎㅏ-ㅣ]","",tw)                   # 한글 불용어(ㅋㅋㅎㅎ ㅠㅜ등) 제거
tw = gsub("<.*>", "", enc2native(tw))          # emoji(/U00000f등) 제거 (windows)
tw = gsub("\\W", " ", tw)
tw = gsub("\\s{2,}", " ", tw)                  # 2개이상 공백을 한개의 공백으로 처리
tw = gsub("[[:punct:]]", "", tw)
# 1. 명사 추출
wc = sapply(tw, extractNoun, USE.NAMES = F)
wc1 = table(unlist(wc))
#names(wc1)
#length(wc1)
wc2 = head(sort(wc1, decreasing = T), 100)
pal = brewer.pal(9, "Set1")
wordcloud(names(wc2), freq=wc2, scale=c(5,0.5), rot.per=0.015,
min.freq = 1, random.order = F, random.color = T, colors = pal)
install.packages(c("rJava", "memoise", "KoNLP"))
install.packages(c("rJava", "memoise", "KoNLP"))
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_191/")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_111/")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_191/")
library(rJava)
library(KoNLP)
library(twitteR)
library(RCurl)
library(RJSONIO)
library(stringr)
library(streamR)
library(ROAuth)
library(RColorBrewer)
library(wordcloud)
load('data/api_info.rda')
setup_twitter_oauth(api_info[1], api_info[2], api_info[3], api_info[4])
tweets = searchTwitter(enc2utf8('딥러닝'), n=300, lan = 'ko', since = '2019-03-11', until = '2019-03-31')
tdf = twListToDF(tweets)
#tdf = tdf %>% filter(!isRetweet) %>% filter(favoriteCount > 2)
tdf = tdf %>% filter(regexpr('광고',text) == -1)    # 특정 단어 포함된 문서 제거
tw = unique(tdf$text)
#tw = enc2utf8(tw)
tw = gsub("[[:cntrl:]]", "", tw)
tw = gsub("http[s]?://[[:alnum:].\\/]+", "", tw)
tw = gsub("&[[:alnum:]]+;", "", tw)
tw = gsub("@[[:alnum:]]+[:]?", "", tw)
tw = gsub("[ㄱ-ㅎㅏ-ㅣ]","",tw)                   # 한글 불용어(ㅋㅋㅎㅎ ㅠㅜ등) 제거
tw = gsub("<.*>", "", enc2native(tw))          # emoji(/U00000f등) 제거 (windows)
tw = gsub("\\W", " ", tw)
tw = gsub("\\s{2,}", " ", tw)                  # 2개이상 공백을 한개의 공백으로 처리
tw = gsub("[[:punct:]]", "", tw)
# 1. 명사 추출
wc = sapply(tw, extractNoun, USE.NAMES = F)
wc1 = table(unlist(wc))
#names(wc1)
#length(wc1)
wc2 = head(sort(wc1, decreasing = T), 100)
pal = brewer.pal(9, "Set1")
wordcloud(names(wc2), freq=wc2, scale=c(5,0.5), rot.per=0.015,
min.freq = 1, random.order = F, random.color = T, colors = pal)
source('C:/workspace/r/hellor/data/libraryinit.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
#install.packages(c('rvest', 'httr', 'stringr'))
newsUrl = "https://news.naver.com/main/home.nhn"
html = read_html(newsUrl)
links = html_attr(html_nodes(html, '.main_component.droppable div a'), 'href')
links = links[!is.na(links)]       # NA 제거
links = links[grepl("https://news.naver.com/main/read", links)]
#links_reg <- regexpr("https://news.naver.com/main/read", links, perl=TRUE)
#links_reg[regmatches(links, links_reg)]
news = list()       # 변수 초기화
View(links)
for (i in 1:length(links)) {
try({
htxt = read_html(links[i])
comments = html_nodes(htxt, '#articleBodyContents')
# repair_encoding(html_text(comments), from='utf-8')
get_news = repair_encoding(html_text(comments))
news[i] = str_trim(get_news)
}, silent = F)
}
news = gsub("[[:cntrl:]]", "", news)                      # 제어문자(\n, \t등) 제거
news = gsub("http[s]?://[[:alnum:].\\/]+", "", news)     # link 제거
news = gsub("&[[:alnum:]]+;", "", news)            # escape(&amp; &lt;등) 제거
news = gsub("@[[:alnum:]]+[:]?", "", news)             # 트위터 계정 부분 제거
news = gsub("[ㄱ-ㅎㅏ-ㅣ]","",news)                   # 한글 불용어(ㅋㅋㅎㅎ ㅠㅜ등) 제거
news = gsub("[∼]", "", news)                   # 한글 불용어(ㅋㅋㅎㅎ ㅠㅜ등) 제거
news = gsub("\\W", " ", news)
news = gsub("<.*>", "", enc2native(news))          # EMO(/U00000f등) 제거 (windows)
#news = gsub('\\p{So}|\\p{Cn}', '', news, perl = TRUE)    # EMO(/U00000f등) 제거 (mac)
news = gsub("[[:punct:]]", " ", news)
news = gsub("\\s{2,}", " ", news)                  # 2개이상 공백을 한개의 공백으로 처리
news =gsub('[[:graph:]]+@[[:alnum:].]+', '', news)
news =gsub('[[:alnum:]]+@[[:alnum:].]+', '', news)
news = gsub("http[s]?://[[:alnum:].\\/\\-]+", "", news)
news = gsub("flash 오류를 우회하기 위한 함수 추가function flash removeCallback", "", news)
view(news)
nouns = sapply(news, extractNoun, USE.NAMES = F)
head(nouns)
n1 = table(unlist(nouns))
head(n1)
View(n1)
wc2 = head(sort(n1, decreasing = T), 500)
pal = brewer.pal(9, "Set1")
wordcloud(names(wc2), freq=wc2, scale=c(5,0.5), rot.per=0.025,
min.freq = 1, random.order = F, random.color = T, colors = pal)
html = read_html(newsUrl)
html = read_html(newsUrl)
newsUrl = "https://news.naver.com/main/home.nhn"
html = read_html(newsUrl)
library(rvest)
warnings()
dbinom(3, size=3, prob = 0.9)
data
View(data)
d
dt42
data$avg = apply(data[,4:8], MARGIN = 1, FUN = mean)
s = data %>% filters(cls == '매') %>% select(avg)
source('C:/workspace/r/hellor/data/libraryinit.R', echo=TRUE)
s = data %>% filters(cls == '매') %>% select(avg)
s = data %>% filter(cls == '매') %>% select(avg)
View(data)
s = data %>% filter(반 == '매') %>% select(avg)
describe(s)
library(psych)
install.packages('psych')
library(psych)
describe(s)
str(s)
str(data)
mnkor = data %>% filter(반 %in% c('죽', '매')) %>% select(반,math)
mnkor$cls = factor(mnkor$cls, levels=c('죽','매'), labels=c('죽', '매'))
mnkor$cls = factor(mnkor$반, levels=c('죽','매'), labels=c('죽', '매'))
describeBy(mnkor$kor, mnkor$cls, mat = T)
describeBy(mnkor$kor, mnkor$cls, mat = T)
describeBy(mnkor$math, mnkor$cls, mat = T)
layout(matrix(c(1,1,2,3), 2, 2, byrow = T))
boxplot(mnkor$math ~ mnkor$cls)
hist(mnkor$math[mnkor$cls == '매'])
hist(mnkor$math[mnkor$cls == '난'])
hist(mnkor$math[mnkor$cls == '죽'])
hist(mnkor$math[mnkor$cls == '매'])
View(r_nouns)
var.test(mnkor$math ~ mnkor~math, data =mnkor)
var.test(mnkor$math ~ mnkor$math, data =mnkor)
var.test(mnkor$math ~ mnkor$cls, data =mnkor)
t.test(mnkor$math ~ mnkor$cls, data = mnkor,
alternative = c("two.sided"),
var.equa = T,
conf.level = 0.95)
describeBy(mnkor$math, mnkor$cls, mat = T)
mu = 63.4667; se = 23.49358; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.25))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.025))
rn
abline(v=mu, col='green', lty=5)
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
mu = 63.4667; se = 23.49358; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
par(new = T)
describeBy(mnkor$math, mnkor$cls, mat = T)
mu = 64.84167; se = 23.15929; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
mu = 63.4667; se = 23.49358; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
par(new = T)
mu = 64.84167; se = 23.15929; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
mu = 63.4667; se = 23.49358; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
par(new = T)
mu = 64.84167; se = 23.15929; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='red', lty=5)
# 20190308 T2### 4개반 수학성적의 유사도(동질의 정도)를 분석하시오.
math_data = data %>% select (반, math)
View(math_data)
describeBy(math_data)
describeBy(math_data$math, math_data$반, mat = T)
layout(matrix(c(1,1,2,3), 2, 2, byrow = T))
boxplot(mnkor$math ~ mnkor$반)
boxplot(math_data$math ~ math_data$반)
boxplot(math_data$math ~ math_data$반)
par(orgpar)
var.test(math_data$math ~ math_data$반, data = math_data$math)
var.test(math_data$math ~ math_data$반, data = math_data)
boxplot(math_data$math ~ math_data$반)
var.test(math_data$math ~ math_data$반, data = math_data)
m = 85; sd = 10
sort(rnorm(100, m, sd)) -> rn
plot(rn)
plot(rn, type='l')
plot(rnorm(100, m, sd))
boxplot(math_data$math ~ math_data$반)
bartlett.test(math_data$math ~ math_data$반, data = math_data)
aaa = aov(data$math ~ data$반, data=math_data)
summary(aaa)
aaa = aov(math_data$math ~ math_data$반, data=math_data)
summary(aaa)
TukeyHSD(aaa)
plot(TukeyHSD(aaa))
draw = function(rn, mu, se, col) {
plot(rn, dnorm(rn, mu, se), col=col, type = 'l',
xlim = c(50, 80), ylim = c(0, 0.25))
abline(v=mu, col=col, lty=5)
}
mu = 62.6; se = 2.097331; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'red')
par(new = T)
mu = 59.4; se = 1.975140; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'blue')
par(new = T)
mu = 64.2833; se = 1.9523; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'green')
par(new = T)
mu = 66.6; se = 1.964653; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'black')
describeBy(math_data$math, math_data$반, mat = T)
plot(rn, dnorm(rn, mu, se), col=col, type = 'l',
xlim = c(50, 80), ylim = c(0, 0.25))
draw = function(rn, mu, se, col) {
plot(rn, dnorm(rn, mu, se), col=col, type = 'l',
xlim = c(50, 80), ylim = c(0, 0.25))
abline(v=mu, col=col, lty=5)
}
mu = 63.59167; se = 2.020535; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'red')
par(new = T)
mu = 63.08333; se = 2.028632; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'blue')
par(new = T)
mu = 63.84167; se = 2.114145; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'green')
par(new = T)
mu = 63.4667; se = 2.144661; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'black')
legend('topright',
legend=c('국', '난', '매', '죽'),
pch=8,
col=c('red', 'blue', 'green', 'black'),
bg='gray')
describeBy(mnkor$math, mnkor$cls, mat = T)
save(data, file="data/data.rda")
knitr::opts_chunk$set(echo = TRUE)
load("data/data.rda")
data$avg = apply(data[,4:8], MARGIN = 1, FUN = mean)
s = data %>% filter(반 == '매') %>% select(avg)
library(psych)
library(dplyr)
library(tibble)
library(ggiraphExtra)
library(maps)
library(ggplot2)
library(stringi)
library(ggiraph)
library(stringi)
library(kormaps2014)
library(plotly)
library(dygraphs)
library(xts)
library(gridExtra)
library(sqldf)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(devtools)
library(twitteR)
library(RCurl)
library(RJSONIO); library(stringr)
library(streamR); library(ROAuth)
library(rJava)
library(KoNLP)
library(rvest); library(httr); library(stringr); library(dplyr)
library(arulesViz)
library(visNetwork)
library(arules); library(igraph); library(combinat)
library(arulesViz)
library(visNetwork)
library(psych)
library(dplyr)
library(tibble)
library(ggiraphExtra)
library(maps)
library(ggplot2)
library(stringi)
library(ggiraph)
library(stringi)
library(kormaps2014)
library(plotly)
library(dygraphs)
library(xts)
library(gridExtra)
library(sqldf)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(devtools)
library(twitteR)
library(RCurl)
library(RJSONIO); library(stringr)
library(streamR); library(ROAuth)
library(rJava)
library(KoNLP)
library(rvest); library(httr); library(stringr); library(dplyr)
library(arulesViz)
library(visNetwork)
library(arules); library(igraph); library(combinat)
library(arulesViz)
library(visNetwork)
library(psych)
library(dplyr)
library(tibble)
library(ggiraphExtra)
library(maps)
library(ggplot2)
library(stringi)
library(ggiraph)
library(stringi)
library(kormaps2014)
library(plotly)
library(dygraphs)
library(xts)
library(gridExtra)
library(sqldf)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(devtools)
library(twitteR)
library(RCurl)
library(RJSONIO); library(stringr)
library(streamR); library(ROAuth)
library(rJava)
library(KoNLP)
library(rvest); library(httr); library(stringr); library(dplyr)
library(arulesViz)
library(visNetwork)
library(arules); library(igraph); library(combinat)
library(arulesViz)
library(visNetwork)
library(psych)
library(stringi)
library(ggiraph)
library(stringi)
library(dplyr)
library(tibble)
library(ggiraphExtra)
library(maps)
library(ggplot2)
library(stringi)
library(ggiraph)
library(stringi)
library(kormaps2014)
library(plotly)
library(dygraphs)
library(xts)
library(gridExtra)
library(sqldf)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(devtools)
library(twitteR)
library(RCurl)
library(RJSONIO); library(stringr)
library(streamR); library(ROAuth)
library(rJava)
library(KoNLP)
library(rvest); library(httr); library(stringr); library(dplyr)
library(arulesViz)
library(visNetwork)
library(arules); library(igraph); library(combinat)
library(arulesViz)
library(visNetwork)
library(psych)
load("data/data.rda")
data$avg = apply(data[,4:8], MARGIN = 1, FUN = mean)
s = data %>% filter(반 == '매') %>% select(avg)
# 20190308 T1#### 죽반과 매반의 수학성적은 차이가 없다.
mnkor = data %>% filter(반 %in% c('죽', '매')) %>% select(반,math)
mnkor$cls = factor(mnkor$반, levels=c('죽','매'), labels=c('죽', '매'))
describeBy(mnkor$math, mnkor$cls, mat = T)
layout(matrix(c(1,1,2,3), 2, 2, byrow = T))
boxplot(mnkor$math ~ mnkor$cls)
hist(mnkor$math[mnkor$cls == '죽'])
hist(mnkor$math[mnkor$cls == '매'])
var.test(mnkor$math ~ mnkor$cls, data =mnkor)
t.test(mnkor$math ~ mnkor$cls, data = mnkor,
alternative = c("two.sided"),
var.equa = T,
conf.level = 0.95)
mu = 63.4667; se = 2.144661; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='green', lty=5)
par(new = T)
mu = 64.84167; se = 2.114145; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(0, 100), ylim = c(0, 0.025))
abline(v=mu, col='red', lty=5)
load("data/data.rda")
data$avg = apply(data[,4:8], MARGIN = 1, FUN = mean)
s = data %>% filter(반 == '매') %>% select(avg)
# 20190308 T1#### 죽반과 매반의 수학성적은 차이가 없다.
mnkor = data %>% filter(반 %in% c('죽', '매')) %>% select(반,math)
mnkor$cls = factor(mnkor$반, levels=c('죽','매'), labels=c('죽', '매'))
describeBy(mnkor$math, mnkor$cls, mat = T)
layout(matrix(c(1,1,2,3), 2, 2, byrow = T))
boxplot(mnkor$math ~ mnkor$cls)
hist(mnkor$math[mnkor$cls == '죽'])
hist(mnkor$math[mnkor$cls == '매'])
var.test(mnkor$math ~ mnkor$cls, data =mnkor)
t.test(mnkor$math ~ mnkor$cls, data = mnkor,
alternative = c("two.sided"),
var.equa = T,
conf.level = 0.95)
mu = 63.4667; se = 2.144661; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(40, 80), ylim = c(0, 0.25))
abline(v=mu, col='green', lty=5)
par(new = T)
mu = 64.84167; se = 2.114145; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(40, 80), ylim = c(0, 0.25))
abline(v=mu, col='red', lty=5)
load("data/data.rda")
data$avg = apply(data[,4:8], MARGIN = 1, FUN = mean)
s = data %>% filter(반 == '매') %>% select(avg)
# 20190308 T1#### 죽반과 매반의 수학성적은 차이가 없다.
mnkor = data %>% filter(반 %in% c('죽', '매')) %>% select(반,math)
mnkor$cls = factor(mnkor$반, levels=c('죽','매'), labels=c('죽', '매'))
describeBy(mnkor$math, mnkor$cls, mat = T)
layout(matrix(c(1,1,2,3), 2, 2, byrow = T))
boxplot(mnkor$math ~ mnkor$cls)
hist(mnkor$math[mnkor$cls == '죽'])
hist(mnkor$math[mnkor$cls == '매'])
var.test(mnkor$math ~ mnkor$cls, data =mnkor)
t.test(mnkor$math ~ mnkor$cls, data = mnkor,
alternative = c("two.sided"),
var.equa = T,
conf.level = 0.95)
mu = 63.4667; se = 2.144661; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.25))
abline(v=mu, col='green', lty=5)
par(new = T)
mu = 64.84167; se = 2.114145; rn = sort(rnorm(1000, mu, se))
plot(rn, dnorm(rn, mu, se), col = 'green', type = 'l', main = '평균점수', xlim = c(50, 80), ylim = c(0, 0.25))
abline(v=mu, col='red', lty=5)
math_data = data %>% select (반, math)
describeBy(math_data$math, math_data$반, mat = T)
boxplot(math_data$math ~ math_data$반)
bartlett.test(math_data$math ~ math_data$반, data = math_data)
aaa = aov(math_data$math ~ math_data$반, data=math_data)
summary(aaa)
TukeyHSD(aaa)
plot(TukeyHSD(aaa))
draw = function(rn, mu, se, col) {
plot(rn, dnorm(rn, mu, se), col=col, type = 'l',
xlim = c(50, 80), ylim = c(0, 0.25))
abline(v=mu, col=col, lty=5)
}
mu = 63.59167; se = 2.020535; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'red')
par(new = T)
mu = 63.08333; se = 2.028632; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'blue')
par(new = T)
mu = 63.84167; se = 2.114145; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'green')
par(new = T)
mu = 63.4667; se = 2.144661; rn = sort(rnorm(1000, mu, se))
draw(rn, mu, se, 'black')
legend('topright',
legend=c('국', '난', '매', '죽'),
pch=8,
col=c('red', 'blue', 'green', 'black'),
bg='gray')
library(dplyr)
library(tibble)
library(ggiraphExtra)
library(maps)
library(ggplot2)
library(stringi)
library(ggiraph)
library(stringi)
library(kormaps2014)
library(plotly)
library(dygraphs)
library(xts)
library(gridExtra)
library(sqldf)
library(tm)
library(RColorBrewer)
library(wordcloud)
library(devtools)
library(twitteR)
library(RCurl)
library(RJSONIO); library(stringr)
library(streamR); library(ROAuth)
library(rJava)
library(KoNLP)
library(rvest); library(httr); library(stringr); library(dplyr)
library(arulesViz)
library(visNetwork)
library(arules); library(igraph); library(combinat)
library(arulesViz)
library(visNetwork)
library(psych)
